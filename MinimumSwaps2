using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution
{

    // Complete the minimumSwaps function below.
    static int minimumSwaps(int[] arr)
    {

        // Created 2 variables, an iterator to count the swaps, and a temp int to hold a value later
        int iter = 0;
        int temp = 0;

        // created an array as a check (to stop the loop early) (The array is filled in the for loop)
        int[] original = new int[arr.Length];


        for (int i = 0; i < arr.Length; i++)
        {

            // if the value at position [i] is equal to i + 1 then it is in the correct place. i + 1 because the for loop is 0 based.
            if (arr[i] != (i+1))
            {

                original[i] = i + 1;

                // while the value at position i != i+1, swap the location of arr[arr[i] -1] with arr[i] 
                // arr[arr[i] - 1] EX: i = 0, arr[arr[0] - 1] should be arr[1-1] so arr[0] = 1, which would mean that this value 1, is being
                // put into the position arr[i] which is 0. so it is in the correct spot. then arr[i] == i + 1, which exits the loop.
                while (arr[i] != i + 1)
                {
                    temp = 0;
                    temp = arr[arr[i] - 1];
                    arr[arr[i] - 1] = arr[i];
                    arr[i] = temp;
                    iter++;
                }

            }
            if (arr.SequenceEqual(original))
            {
                break;
            }
        }
        return iter;
    }

    static void Main(string[] args)
    {
        // Test Value
        int[] arr = { 1, 3, 5, 2, 4, 6, 7 };
        int res = minimumSwaps(arr);

    }
}
