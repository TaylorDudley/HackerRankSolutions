using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'sherlockAndAnagrams' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int sherlockAndAnagrams(string s)
    {
        // substrings are sorted with their occurrence frequency
        var hash = new Dictionary<string, int>();
        var count = 0;

        for (var i = 0; i < s.Length; i++)
        {
            for (var j = i; j < s.Length; j++)
            {
                // sub is a new substring from i to j - i + 1), This is converted into a character array and reordered
                // then put into an array
                var sub = new string(s.Substring(i, j - i + 1)
                    .ToCharArray()
                    .OrderBy(p => p)
                    .ToArray());

                if (!hash.ContainsKey(sub))
                {
                    // Adds the sub and its first appearance. (since it is not in the dictionary yet.
                    hash.Add(sub, 1);
                }
                else
                {
                    // increment
                    count += hash[sub];
                    hash[sub]++;
                }
            }
        }

        return count;
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        // Test Input
        string s = "abba";
        int result = Result.sherlockAndAnagrams(s);
    }
}
