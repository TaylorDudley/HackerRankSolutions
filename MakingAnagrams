using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{
    /*
     * Complete the 'makeAnagram' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. STRING a cde
     *  2. STRING b abc
     */
    public static int makeAnagram(string a, string b)
    {
        // Create 2 char lists containing a and b
        List<char> ListA = a.ToList();
        List<char> ListB = b.ToList();

        int total = a.Length + b.Length;
        // number of deletions
        int count = 0;

        // if listB contains listA[i] then remove it from list[i] and go again (til ListA is empty)
        for (int i = 0; i < ListA.Count; i++)
        {
            if (ListB.Contains(ListA[i]))
            {
                count++;
                ListB.Remove(ListA[i]);
            }
        }
        
        // return length of the arrays - the (count * 2) <-- 2x count because each character deletion is technically needed twice.
        return total - (2 * count);
    }
}

class Solution
{
    public static void Main(string[] args)
    {
        // Test Input
        string a = "cde";
        string b = "abc";

        int res = Result.makeAnagram(a, b);
    }
}
