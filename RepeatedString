using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{
    /*
     * Complete the 'repeatedString' function below.
     *
     * The function is expected to return a LONG_INTEGER.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. LONG_INTEGER n
     */

    public static long repeatedString(string s, long n)
    {
        // Created 2 variables... multiple is the multiple of (n / size of s)
        // EX: 10 / 3 = 3.33333 (long so it = 3)
        long multiple = n / s.Length;

        // number of times 'a' appears in a string
        long numAppeared = s.Count(f => f == 'a');

        // number of times 'a' appears in the string a multpile of times.
        numAppeared = (numAppeared * multiple);

        // loop to clear up the remainder. n%s is the modulus. iterate for the remainder and return the number of appearances.
        for (int i = 0; i < n%s.Length; i++)
        {
            if (s[i] == 'a')
            {
                numAppeared++;
            }
        }
        return numAppeared;
    }
}

class Solution
{
    public static void Main(string[] args)
    {

        // Test Input
        string s = "kmretasscityylpdhuwjirnqimlkcgxubxmsxpypgzxtenweirknjtasxtvxemtwxuarabssvqdnktqadhyktagjxoanknhgilnm";
        long n = 736778906400;
        long result = Result.repeatedString(s, n);
    }
}
