using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'countSwaps' function below.
     *
     * The function accepts INTEGER_ARRAY a as parameter.
     */

    public static void countSwaps(List<int> a)
    {

        // 2 Variables, Counter, and a temp int to hold a[j] while a[j] is being changed.
        int count = 0;
        int temp = 0;
        for (int i = 0; i < a.Count; i++)
        {
            // Skip Last Element
            for (int j = 0; j < a.Count - 1; j++)
            {
                // Swap adjacent elements if they are in decreasing order
                if (a[j] > a[j + 1])
                {
                    temp = a[j];
                    a[j] = a[j + 1];
                    a[j + 1] = temp;
                    count++;
                }
            }

        }
        Console.Out.WriteLine($"Array is sorted in {count} swaps.");
        Console.Out.WriteLine("First Element: " + a[0]);
        Console.Out.WriteLine("Last Element: " + a[a.Count-1]);
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        // Test Input
        List<int> a = new List<int>() { 4, 2, 3, 1 };
        Result.countSwaps(a);
    }
}
